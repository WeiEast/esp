<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.apass.esp.mapper.MonitorEntityMapper">

    <resultMap id="StatisticResultMap" type="com.apass.esp.domain.extentity.MonitorEntityStatistics">
        <result column="total_monitor_num" property="totalMonitorNum" jdbcType="INTEGER"/>
        <result column="method_name" property="methodName" jdbcType="VARCHAR"/>
        <result column="env" property="env" jdbcType="VARCHAR"/>
        <result column="application" property="application" jdbcType="VARCHAR"/>
        <result column="method_desciption" property="methodDescrption" jdbcType="VARCHAR"/>
        <result column="time" property="time" jdbcType="BIGINT"/>
        <result column="host" property="host" jdbcType="VARCHAR"/>
        <result column="notice" property="notice" jdbcType="INTEGER"/>
    </resultMap>

    <select id="getMonitorEntitybyTime" resultMap="StatisticResultMap">
        SELECT count(1) as total_monitor_num,env,
            application,
            method_name,
            method_desciption
             from
        (SELECT * from
        t_apass_monitor
        where
            `invoke_date` BETWEEN #{date}
        AND #{currentDate}
        AND env = #{env}
        AND flag = '0'
        AND STATUS = '0') a GROUP BY
            method_name,
            application
    </select>


    <select id="getMonitorEntityByMethodName" resultMap="BaseResultMap">
        SELECT
        *
        FROM
        t_apass_monitor
        where
        method_name = #{methodName}
        AND
        env = #{env}
        AND
        application = #{application}
        AND
        invoke_date
        BETWEEN
        #{date}
        AND
        #{currentDate}
        AND status=0
        AND flag = '0'
    </select>

    <sql id="query_where_clause">
        <trim prefix="where" prefixOverrides="and|or">
            <if test="startCreateDate != null">
                <![CDATA[  and invoke_date >= #{startCreateDate} ]]>
            </if>
            <if test="endCreateDate != null and endCreateDate != '' ">
                <![CDATA[  and invoke_date <= #{endCreateDate} ]]>
            </if>
            <if test="status != null">
                status = #{status}
            </if>
            AND flag = '0'
        </trim>
    </sql>
    
    <sql id="query_where_clause_flag1">
        <trim prefix="where" prefixOverrides="and|or">
            <if test="startCreateDate != null">
                <![CDATA[  and invoke_date >= #{startCreateDate} ]]>
            </if>
            <if test="endCreateDate != null and endCreateDate != '' ">
                <![CDATA[  and invoke_date <= #{endCreateDate} ]]>
            </if>
            AND flag = '1'
        </trim>
    </sql>


    <select id="pageList" resultMap="StatisticResultMap" parameterType="com.apass.esp.domain.query.MonitorQuery">
      select host,
             env,
             application,
             method_name,
             method_desciption,
             count(*) as total_monitor_num
      from t_apass_monitor
        <include refid="query_where_clause" />
       group by host,application,method_name
        <if test="startRecordIndex != null">
            <include refid="PAGINATION.MYSQL_PAGINATION" />
        </if>
    </select>
    
    <select id="monitorList" resultMap="BaseResultMap" parameterType="com.apass.esp.domain.query.MonitorQuery">
    	select * from t_apass_monitor
    	<include refid="query_where_clause_flag1" />
    	order by invoke_date desc
        <if test="startRecordIndex != null">
            <include refid="PAGINATION.MYSQL_PAGINATION" />
        </if>
    </select>
    <select id="monitorListCount" resultType="java.lang.Integer" parameterType="com.apass.esp.domain.query.MonitorQuery">
        select count(*) from t_apass_monitor
        <include refid="query_where_clause_flag1" />
        order by invoke_date desc
    </select>

    <select id ="count" resultType="java.lang.Integer" parameterType="com.apass.esp.domain.query.MonitorQuery">
        select count(*) from ( select host,
            env,
            application,
            method_name,
            method_desciption,
            sum(time) as time,
            count(*) as total_monitor_num
            from t_apass_monitor
            <include refid="query_where_clause" />
            group by host,application,method_name
        ) t1
    </select>

    <select id="getByCurrentDay" resultMap="BaseResultMap">
        SELECT
        *
        FROM
        t_apass_monitor
        where
        method_name = #{methodName}
        AND
        env = #{env}
        AND
        application = #{application}
        AND
        DATE_FORMAT(invoke_date,'%Y-%m-%d')=DATE_FORMAT(#{date}, '%Y-%m-%d')
    </select>

    <select id="statisticsTimeAndNum" resultMap="StatisticResultMap">
      select sum(time) time,count(*) total_monitor_num,notice from t_apass_monitor
      where
      env = #{env} and application = #{application}
      and method_name = #{methodName} and status = #{status} and flag = '0'
        <if test="startCreateDate != null">
            <![CDATA[  and invoke_date >= #{startCreateDate} ]]>
        </if>
        <if test="endCreateDate != null and endCreateDate != '' ">
            <![CDATA[  and invoke_date <= #{endCreateDate} ]]>
        </if>
    </select>


</mapper>
