<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="OrderSubInfoEntity">
	<!-- 查询条件 -->
	<sql id="QueryConditionSql">
		<where>
			<if test="orderId != null and orderId != ''">
				and orderInfo.order_Id like CONCAT('%',#{orderId},'%')
			</if>
			<if test="orderStatus != null and orderStatus != ''">
				and orderInfo.orderstatus like
				CONCAT('%',#{orderStatus},'%')
			</if>
			<if test="refundType != null and refundType != ''">
				and refundInfo.refund_Type like
				CONCAT('%',#{refundType},'%')
			</if>
			<if test="createDate != null and createDate != ''">
				and date_format(orderInfo.create_date,'%Y-%m-%d') =
				#{createDate}
			</if>
			<if test="telephone != null and telephone != ''">
				and orderInfo.telephone like CONCAT('%',#{telephone},'%')
			</if>
			<if test="merchantCode != null and merchantCode != ''">
				and orderInfo.merchant_code = #{merchantCode}
			</if>
			<if test="name != null and name != ''">
				and orderInfo.name like CONCAT('%',#{name},'%')
			</if>
		</where>
	</sql>
	<sql id="QueryConditionSqlList">
		<where>
			<if test="orderId != null and orderId != ''">
				and orderInfo.order_Id like CONCAT('%',#{orderId},'%')
			</if>
			<if test="orderStatus != null and orderStatus != ''">
				and orderInfo.orderstatus in (${orderStatus})
			</if>
			<if test="refundType != null and refundType != ''">
				and refundInfo.refund_Type like
				CONCAT('%',#{refundType},'%')
			</if>
			<if test="createDate != null and createDate != ''">
				and date_format(orderInfo.create_date,'%Y-%m-%d') =
				#{createDate}
			</if>
			<if test="telephone != null and telephone != ''">
				and orderInfo.telephone like CONCAT('%',#{telephone},'%')
			</if>
			<if test="merchantCode != null and merchantCode != ''">
				and orderInfo.merchant_code = #{merchantCode}
			</if>
			<if test="name != null and name != ''">
				and orderInfo.name like CONCAT('%',#{name},'%')
			</if>
		</where>
	</sql>
	<!-- 订单查询页面显示  -->
	<select id="querySubOrderDetailInfoByParam" parameterType="Map"
		resultType="OrderSubInfoEntity">
		<![CDATA[
		SELECT
		orderInfo.order_id orderId,
		orderInfo.orderstatus orderStatus,
		orderInfo.orderstatus orderStatusDsc,
		orderInfo.user_id userId,
		orderInfo.merchant_code merchantCode,
		round(orderInfo.order_amt,2) orderAmt,
		orderInfo.logistics_name logisticsName,
		orderInfo.logistics_no logisticsNo,
	    orderInfo.create_date createDate,
		orderInfo.payType payType,
		orderInfo.pay_time payDate,
		orderInfo.province province,
		orderInfo.city city,
		orderInfo.district district,
		orderInfo.address address,
		orderInfo.name name,
		orderInfo.telephone telephone,
		orderInfo.postcode postcode,
		orderInfo.paystatus  payStatus,
		orderInfo.update_date updateDate,
		concat(orderInfo.province,orderInfo.city,orderInfo.district,orderInfo.address) fullAddress,
		merchant.merchant_name merchantName,
		refundInfo.id refundId,
		refundInfo.refund_type refundType,
		orderInfo.pre_delivery preDelivery,
		orderInfo.pre_delivery preDeliveryMsg,
		orderInfo.source source,
		orderInfo.ext_order_id extOrderId
		FROM
		t_esp_order_info orderInfo 
        left join t_esp_merchant_info merchant on 
        orderInfo.merchant_code=merchant.merchant_code
        left join t_esp_refund_info refundInfo on orderInfo.order_id=refundInfo.order_id
		]]>
		<include refid="QueryConditionSqlList" />
	    <![CDATA[
		ORDER BY orderInfo.orderstatus, orderInfo.create_date DESC
		]]>
	</select>
	<!-- 订单查询 导出  -->
	<select id="querySubOrderDetailInfoByParamForExport" parameterType="Map"
		resultType="OrderSubInfoEntity">
		<![CDATA[
		SELECT
			orderInfo.order_id orderId,
			orderInfo.orderstatus orderStatus,
			orderInfo.orderstatus orderStatusDsc,
			orderInfo.user_id userId,
			orderInfo.merchant_code merchantCode,
			merchant.merchant_name merchantName,
			goodsbase.id goodsId,
			goodsbase.goods_name goodsName,
			orderdetail.goods_type goodsType,
			orderdetail.goods_type goodsTypeDesc,
			goodsbase.goods_model goodsModel,
			goodsbase.goods_sku_type goodsSkuType,
			goodsstockinfo.goods_sku_attr goodsSkuAttr,
			orderdetail.goods_num goodsNum,
			round(orderdetail.goods_price, 2) orderAmt,
			orderInfo.logistics_name logisticsName,
			orderInfo.logistics_no logisticsNo,
			orderInfo.create_date createDate,
			orderInfo.payType payType,
			orderInfo.pay_time payDate,
			orderInfo.province province,
			orderInfo.city city,
			orderInfo.district district,
			orderInfo.address address,
			orderInfo. NAME NAME,
			orderInfo.telephone telephone,
			orderInfo.postcode postcode,
			orderInfo.paystatus payStatus,
			orderInfo.update_date updateDate,
			orderInfo.pre_delivery preDelivery,
			orderInfo.pre_delivery preDeliveryMsg,
			concat(
				orderInfo.province,
				orderInfo.city,
				orderInfo.district,
				orderInfo.address
			) fullAddress,
			refundInfo.id refundId,
			refundInfo.refund_type refundType
		FROM
			t_esp_order_info orderInfo
		LEFT JOIN t_esp_merchant_info merchant ON orderInfo.merchant_code = merchant.merchant_code
		LEFT JOIN t_esp_refund_info refundInfo ON orderInfo.order_id = refundInfo.order_id
		LEFT JOIN t_esp_order_detail_info orderdetail ON orderInfo.order_id = orderdetail.order_id
		LEFT JOIN t_esp_goods_base_info goodsbase ON orderdetail.goods_id = goodsbase.id
		LEFT JOIN t_esp_goods_stock_info goodsstockinfo ON orderdetail.goods_stock_id = goodsstockinfo.id
		]]>
		<include refid="QueryConditionSqlList" />
	    <![CDATA[
			ORDER BY orderInfo.create_date DESC,
			orderinfo.order_id DESC
		]]>
	</select>

	<update id="updateLogisticsInfoByOrderId" parameterType="Map">
		update
		t_esp_order_info set
		logistics_name=#{logisticsName},logistics_no
		=#{logisticsNo}
		where order_id = #{orderId}
	</update>

	<update id="updateOrderStatusByOrderId" parameterType="Map">
		update
		t_esp_order_info set
		orderstatus=#{orderStatus}
		where order_id =
		#{orderId}
	</update>

	<update id="updateOrderStatusAndLastRtimeByOrderId"
		parameterType="Map">
		update
		t_esp_order_info set
		orderstatus=#{orderStatus},
		send_outgoodsdate = CURRENT_TIMESTAMP
		where order_id = #{orderId}
	</update>
	<!-- 记录总数 -->
	<select id="querySubOrderDetailInfoByParamCount" parameterType="Map"
		resultType="Integer">
	    <![CDATA[
		SELECT
	    count(1)
		FROM
		t_esp_order_info orderInfo 
        left join t_esp_merchant_info merchant on 
        orderInfo.merchant_code=merchant.merchant_code
        left join t_esp_refund_info refundInfo on orderInfo.order_id=refundInfo.order_id
        ]]>
		<include refid="QueryConditionSqlList" />
	</select>
	<!-- 记录总数 -->
	<select id="querySubOrderDetailInfoByParamForExportCount" parameterType="Map"
		resultType="Integer">
	    <![CDATA[
		SELECT
	    count(1)
		FROM
		t_esp_order_info orderInfo 
     	LEFT JOIN t_esp_merchant_info merchant ON orderInfo.merchant_code = merchant.merchant_code
		LEFT JOIN t_esp_refund_info refundInfo ON orderInfo.order_id = refundInfo.order_id
		LEFT JOIN (
			SELECT
				orderdetail.order_id orderIdTemp,
				orderdetail.goods_num goodsNumTemp,
				goodsbase.id goodsIdTemp,
				goodsbase.goods_name goodsNameTemp,
				goodsbase.goods_type goodsTypeTemp,
				goodsbase.goods_model goodsModelTemp,
				goodsbase.goods_sku_type goodsSkuTypeTemp
			FROM
				t_esp_order_detail_info orderdetail
			LEFT JOIN t_esp_goods_base_info goodsbase ON orderdetail.goods_id = goodsbase.id
		) orderdetailandgoodtemp ON orderInfo.order_id = orderdetailandgoodtemp.orderIdTemp
        ]]>
		<include refid="QueryConditionSqlList" />
	</select>
	
	
	
	<!-- 邮件导出 -->
	<select id="queryOrderSubInfoByTime" parameterType="Map"
		resultType="OrderSubInfoEntity">
		SELECT
		orderInfo.order_id orderId,
		orderInfo.orderstatus orderStatus,
		orderInfo.orderstatus orderStatusDsc,
		orderInfo.merchant_code merchantCode,
	    orderInfo.create_date createDate,
		orderInfo.payType payType,
		orderInfo.pay_time payDate,
		orderInfo.province province,
		orderInfo.name name,
		orderInfo.telephone telephone,
		orderInfo.pre_delivery preDelivery,
		orderInfo.pre_delivery preDeliveryMsg,
		merchant.merchant_name merchantName,
		detailInfo.goods_id goodsId,
		detailInfo.goods_name goodsName,
		detailInfo.goods_price goodsPrice,
		detailInfo.goods_num goodsNum,
		baseInfo.goods_type goodsType,
		baseInfo.goods_type goodsTypeDesc,
		baseInfo.goods_model goodsModel,
		baseInfo.goods_sku_type goodsSkuAttr
		FROM
			t_esp_order_info orderInfo 
			left join t_esp_merchant_info merchant on orderInfo.merchant_code=merchant.merchant_code
	        left join t_esp_order_detail_info detailInfo on orderInfo.order_id=detailInfo.order_id
			left join t_esp_goods_base_info baseInfo on baseInfo.id = detailInfo.goods_id
		<where>
			<if test="dateBegin != null ">
			  <![CDATA[ 
			    and orderInfo.create_date >= #{dateBegin} 
			    ]]> 
			</if>
			<if test="dateEnd != null ">
			  <![CDATA[ 
			    and orderInfo.create_date <  #{dateEnd} 
			    ]]> 
			</if>
		</where>
		ORDER BY orderInfo.orderstatus, orderInfo.create_date DESC
	</select>
	
	
	
	
	<!-- 订单查询页面显示  -->
	<select id="queryOrderCashRefundException" parameterType="Map"
		resultType="OrderSubInfoEntity">
		SELECT
		orderInfo.order_id orderId,
		orderInfo.orderstatus orderStatus,
		orderInfo.payType payType,
		orderInfo.orderstatus orderStatusDsc,
		round(orderInfo.order_amt,2) orderAmt,
		round(refundTxn.amt,2) txnAmt,
	    orderInfo.create_date createDate,
	    refundInfo.status refundStatus,
	    refundInfo.auditor_name auditorName,
	    refundInfo.auditor_date auditorDate
		FROM
		t_esp_order_info orderInfo 
        left join t_esp_cash_refund refundInfo on orderInfo.order_id=refundInfo.order_id
        left join t_esp_refund_txn refundTxn on refundTxn.cash_refund_id = refundInfo.id
		
		where 
		refundInfo.refund_type = 'offline' and 
		orderInfo.orderStatus = 'D09'  and
		refundTxn.type_code in ('T10','T11')
		
		ORDER BY refundInfo.create_date DESC
	</select>
	
	<select id="queryOrderCashRefundExceptionCount" parameterType="Map"
		resultType="Integer">
		SELECT
		count(1)
		FROM
		t_esp_order_info orderInfo 
        left join t_esp_cash_refund refundInfo on orderInfo.order_id=refundInfo.order_id
        left join t_esp_refund_txn refundTxn on refundTxn.cash_refund_id = refundInfo.id
		
		where 
		refundInfo.refund_type = 'offline' and 
		orderInfo.orderStatus = 'D09'  and
		refundTxn.type_code in ('T10','T11')
		
		ORDER BY refundInfo.create_date DESC
	</select>
	
	<select id="queryOrderRefundException" parameterType="Map"
		resultType="OrderSubInfoEntity">
		SELECT
		orderInfo.order_id orderId,
		orderInfo.orderstatus orderStatus,
		orderInfo.payType payType,
		orderInfo.orderstatus orderStatusDsc,
		round(orderInfo.order_amt,2) orderAmt,
		round(refund.refund_amt,2) txnAmt,
	    orderInfo.create_date createDate
		FROM
		t_esp_refund_info refund
        left join  t_esp_order_info orderInfo on refund.order_id = orderInfo.order_id

		where 
		refund.refund_type = '0' and 
		refund.is_agree = '1'  and
		orderInfo.orderStatus = 'D05'  and
		exists (select * from t_apass_txn_info refundTxn where refundTxn.order_id = orderInfo.main_order_id and refundTxn.txn_type in ('T10','T11') )
		ORDER BY refund.create_date DESC
	</select>
	<select id="queryOrderRefundExceptionCount" parameterType="Map"
		resultType="Integer">
		SELECT
		count(1)
		FROM
		t_esp_refund_info refund
        left join  t_esp_order_info orderInfo on refund.order_id = orderInfo.order_id
	    left join  t_apass_txn_info refundTxn on refundTxn.order_id = orderInfo.main_order_id

		where 
		refund.refund_type = '0' and 
		refund.is_agree = '1' and
		orderInfo.orderStatus = 'D05'  and
		refundTxn.txn_type in ('T10','T11')
	    
		ORDER BY refund.create_date DESC
	</select>
</mapper>