<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- insert,select,selectByPK,count, delete, update,updateAll -->
<mapper namespace="GoodsBasicInfoEntity">

    <!--  商品列表展示（分页）-->
    <select id="select" parameterType="GoodsBasicInfoEntity" resultType="GoodsBasicInfoEntity">
        <![CDATA[
		SELECT
			a.ID goodId,
			c.goodsStockId goodsStockId,
			a.goods_name goodsName,
			a.goods_title goodsTitle,
			a.goods_sell_pt goodsSellPt,
			a.goods_logo_url goodsLogoUrl,
			c.minPrice marketPrice
		FROM
			t_esp_goods_base_info a,
			(
				SELECT
					a.goods_id goodsId,
					a.id goodsStockId,
					b.minprice minPrice
				FROM
					t_esp_goods_stock_info a,
					(
						SELECT
							goods_id goodsId,
							MIN(market_price) minprice
						FROM
							t_esp_goods_stock_info
						WHERE
							stock_curr_amt > 0
						GROUP BY
							goods_id
					) b
				WHERE
					a.goods_id = b.goodsId
				AND a.market_price = b.minprice
				GROUP BY
					a.goods_id
			) c
		WHERE
			a.id = c.goodsId
		AND CURRENT_TIMESTAMP > a.list_time
		AND CURRENT_TIMESTAMP < a.delist_time
		AND STATUS = 'G02'
		AND is_delete = '01'
	]]>
        <!-- 添加商品类目查询条件 -->
        <if test="categoryId1 != null and categoryId1 != ''">
            AND a.category_id1 = #{categoryId1, jdbcType=BIGINT}
        </if>
        <if test="categoryId2 != null and categoryId2 != ''">
            AND a.category_id2 = #{categoryId2, jdbcType=BIGINT}
        </if>
        <if test="categoryId3 != null and categoryId3 != ''">
            AND a.category_id3 = #{categoryId3, jdbcType=BIGINT}
        </if>
        <![CDATA[
		ORDER BY a.update_date DESC 
	]]>
    </select>

    <!-- 商品列表查询（分页） -->
    <select id="count" parameterType="GoodsBasicInfoEntity" resultType="Integer">
        <![CDATA[
			SELECT  COUNT(1) 
			FROM
					t_esp_goods_base_info a,
					(
						SELECT
							a.goods_id goodsId,
							a.id goodsStockId,
							b.minprice minPrice
						FROM
							t_esp_goods_stock_info a,
							(
								SELECT
									goods_id goodsId,
									MIN(market_price) minprice
								FROM
									t_esp_goods_stock_info
								WHERE
									stock_curr_amt > 0
								GROUP BY
									goods_id
							) b
						WHERE
							a.goods_id = b.goodsId
						AND a.market_price = b.minprice
						GROUP BY
							a.goods_id
					) c
				WHERE
					a.id = c.goodsId
				AND CURRENT_TIMESTAMP > a.list_time
				AND CURRENT_TIMESTAMP < a.delist_time
				AND STATUS = 'G02'
				AND is_delete = '01'
		]]>
        <!-- 添加商品类目查询条件 -->
        <if test="categoryId1 != null and categoryId1 != ''">
            AND a.category_id1 = #{categoryId1, jdbcType=BIGINT}
        </if>
        <if test="categoryId2 != null and categoryId2 != ''">
            AND a.category_id2 = #{categoryId2, jdbcType=BIGINT}
        </if>
        <if test="categoryId3 != null and categoryId3 != ''">
            AND a.category_id3 = #{categoryId3, jdbcType=BIGINT}
        </if>
    </select>
    <!--  商品列表展示（分页）(商品上架时间)(按商品销量排列)(商品创建时间)(商品售价)-->
    <select id="loadGoodsByParam" parameterType="GoodsBasicInfoEntity" resultType="GoodsBasicInfoEntity">
        <![CDATA[
			SELECT
					a.id goodId,
					b.id goodsStockId,
					a.goods_name goodsName,
					a.goods_title goodsTitle,
					a.goods_logo_url goodsLogoUrl,
					a.source source
				FROM
					t_esp_goods_base_info a
				LEFT JOIN (
					SELECT
						id id,
						goods_id goods_id,
						SUM(sales_num) sales_num
					FROM
						t_esp_goods_sales_volume
					GROUP BY
						goods_id
				) c ON a.id = c.goods_id
				LEFT JOIN (
					SELECT
						m.goods_id goods_id,
						m.id id,
						n.minprice minPrice
					FROM
						t_esp_goods_stock_info m,
						(
							SELECT
								goods_id goodsId,
								MIN(goods_price) minprice
							FROM
								t_esp_goods_stock_info
							WHERE
								stock_curr_amt != 0
							GROUP BY
								goods_id
						) n
					WHERE
						m.goods_id = n.goodsId
					AND m.goods_price = n.minprice
					GROUP BY
						m.goods_id
				) b ON a.id = b.goods_id
				WHERE
					a.`status` = 'G02'
				AND a.is_delete = '01'
				AND CURRENT_TIMESTAMP > a.list_time
				AND CURRENT_TIMESTAMP < a.delist_time
	]]>
        <!-- 添加商品类目查询条件 -->
        <if test="categoryId1 != null and categoryId1 != ''">
            AND a.category_id1 = #{categoryId1, jdbcType=BIGINT}
        </if>
        <if test="categoryId2 != null and categoryId2 != ''">
            AND a.category_id2 = #{categoryId2, jdbcType=BIGINT}
        </if>
        <if test="categoryId3 != null and categoryId3 != ''">
            AND a.category_id3 = #{categoryId3, jdbcType=BIGINT}
        </if>
        <!-- 按商品上架时间降序排列 （默认）（sort不传值时默认default）-->
        <!-- 添加商品类目查询条件 -->
        <if test="categoryId1 != null and categoryId1 != ''">
            AND a.category_id1 = #{categoryId1, jdbcType=BIGINT}
        </if>
        <if test="categoryId2 != null and categoryId2 != ''">
            AND a.category_id2 = #{categoryId2, jdbcType=BIGINT}
        </if>
        <if test="categoryId3 != null and categoryId3 != ''">
            AND a.category_id3 = #{categoryId3, jdbcType=BIGINT}
        </if>
        <!-- 按商品上架时间降序排列 （默认）（sort不传值时默认default）-->
        <if test="sort ==null or sort =='' or sort=='default'">
            ORDER BY a.list_time DESC
        </if>
        <!-- 按商品销量降序排列(销量) -->
        <if test="sort !=null and sort !='' and sort=='amount'">
            ORDER BY c.sales_num DESC
        </if>
        <!-- 按商品创建时间排序  （新品）DESC 降序，ASC 升序-->
        <if test="sort !=null and sort !='' and sort=='new' and order !=null and order !='' and order=='DESC'">
            ORDER BY a.newCreat_date DESC
        </if>
        <if test="sort !=null and sort !='' and sort=='new' and order !=null and order !='' and order=='ASC'">
            ORDER BY a.newCreat_date ASC
        </if>
        <!-- 按商品售价排序  DESC 降序，ASC 升序-->
        <if test="sort !=null and sort !='' and sort=='price' and order !=null and order !='' and order=='DESC'">
            ORDER BY b.goods_price DESC
        </if>
        <if test="sort !=null and sort !='' and sort=='price' and order !=null and order !='' and order=='ASC'">
            ORDER BY b.goods_price ASC
        </if>
        <if test="1==1">
            limit #{page, jdbcType=INTEGER},#{rows, jdbcType=INTEGER}
        </if>
    </select>
    <!-- 商品列表展示（分页）商品数量 -->
    <select id="loadGoodsByParamCount" parameterType="GoodsBasicInfoEntity" resultType="Integer">
        <![CDATA[
			SELECT
						count(1)
					FROM
						t_esp_goods_base_info a
					LEFT JOIN (
						SELECT
							id id,
							goods_id goods_id,
							SUM(sales_num) sales_num
						FROM
							t_esp_goods_sales_volume
						GROUP BY
							goods_id
					) c ON a.id = c.goods_id
					LEFT JOIN (
						SELECT
							m.goods_id goods_id,
							m.id id,
							n.minprice minPrice
						FROM
							t_esp_goods_stock_info m,
							(
								SELECT
									goods_id goodsId,
									MIN(goods_price) minprice
								FROM
									t_esp_goods_stock_info
								WHERE
									stock_curr_amt != 0
								GROUP BY
									goods_id
							) n
						WHERE
							m.goods_id = n.goodsId
						AND m.goods_price = n.minprice
						GROUP BY
							m.goods_id
					) b ON a.id = b.goods_id
					WHERE
						a.`status` = 'G02'
					AND a.is_delete = '01'
					AND CURRENT_TIMESTAMP > a.list_time
					AND CURRENT_TIMESTAMP < a.delist_time
				
	   ]]>
        <!-- 添加商品类目查询条件 -->
        <if test="categoryId1 != null and categoryId1 != ''">
            AND a.category_id1 = #{categoryId1, jdbcType=BIGINT}
        </if>
        <if test="categoryId2 != null and categoryId2 != ''">
            AND a.category_id2 = #{categoryId2, jdbcType=BIGINT}
        </if>
        <if test="categoryId3 != null and categoryId3 != ''">
            AND a.category_id3 = #{categoryId3, jdbcType=BIGINT}
        </if>
    </select>

    <select id="getRemainderGoods" resultType="java.lang.String">
		select id from t_esp_goods_base_info
		where status='G02'
		AND is_delete = '01'
		order by list_time limit #{pageBegin},#{count}
	</select>

    <select id="getRemainderGoodsNew" resultType="java.lang.String">
         <![CDATA[
         SELECT
            teg.id goodsId
         from t_esp_goods_base_info teg
         where teg.status='G02'
         AND teg.goods_type != 2
		 AND teg.is_delete = '01'
         AND CURRENT_TIMESTAMP > teg.list_time
         AND CURRENT_TIMESTAMP < teg.delist_time
         AND teg.id not in (
                SELECT
                    goods_id
                FROM
                    t_esp_goods_sales_volume
                WHERE
                    `create_date` BETWEEN (CURDATE() - INTERVAL 30 DAY)
                AND CURDATE()
                GROUP BY
                    goods_id)
        AND teg.id not in(
         SELECT
            teg.id goodsId
        FROM
            (
                SELECT
                    goods_id,
                    sum(sales_num) su
                FROM
                    t_esp_goods_sales_volume
                WHERE
                    `create_date` BETWEEN (CURDATE() - INTERVAL 30 DAY)
                AND CURDATE()
                GROUP BY
                    goods_id
                ORDER BY
                    su DESC
            ) a
        LEFT JOIN t_esp_goods_base_info teg ON teg.id = a.goods_id
        WHERE
            teg.goods_type != 2
        AND teg.`status` = 'G02'
        AND teg.is_delete='01'
        AND CURRENT_TIMESTAMP > teg.list_time
        AND CURRENT_TIMESTAMP < teg.delist_time
        )
        order by teg.update_date desc
        limit #{pageBegin},#{count}
        ]]>
    </select>

    <select id="getRemainderGoodsNewCount" resultType="java.lang.Integer">
        <![CDATA[
         SELECT
            count(1)
         from t_esp_goods_base_info teg
         where teg.status='G02'
         AND teg.goods_type != 2
		 AND teg.is_delete = '01'
         AND CURRENT_TIMESTAMP > teg.list_time
         AND CURRENT_TIMESTAMP < teg.delist_time
         AND teg.id not in (
                SELECT
                    goods_id
                FROM
                    t_esp_goods_sales_volume
                WHERE
                    `create_date` BETWEEN (CURDATE() - INTERVAL 30 DAY)
                AND CURDATE()
                GROUP BY
                    goods_id)
         AND teg.id not in(
         SELECT
            teg.id goodsId
         FROM
            (
                SELECT
                    goods_id,
                    sum(sales_num) su
                FROM
                    t_esp_goods_sales_volume
                WHERE
                    `create_date` BETWEEN (CURDATE() - INTERVAL 30 DAY)
                AND CURDATE()
                GROUP BY
                    goods_id
                ORDER BY
                    su DESC
            ) a
        LEFT JOIN t_esp_goods_base_info teg ON teg.id = a.goods_id
        WHERE
            teg.goods_type != 2
        AND teg.`status` = 'G02'
        AND teg.is_delete='01'
        AND CURRENT_TIMESTAMP > teg.list_time
        AND CURRENT_TIMESTAMP < teg.delist_time
        )
        ]]>
    </select>


    <select id="popularGoods" resultType="java.lang.String">
         <![CDATA[
        SELECT
            teg.id goodsId
        FROM
            (
                SELECT
                    goods_id,
                    sum(sales_num) su
                FROM
                    t_esp_goods_sales_volume
                WHERE
                    `create_date` BETWEEN (CURDATE() - INTERVAL 30 DAY)
                AND CURDATE()
                GROUP BY
                    goods_id
                ORDER BY
                    su DESC
            ) a
        LEFT JOIN t_esp_goods_base_info teg ON teg.id = a.goods_id
        WHERE
            teg.goods_type != 2
        AND teg.`status` = 'G02'
        AND teg.is_delete='01'
        AND CURRENT_TIMESTAMP > teg.list_time
        AND CURRENT_TIMESTAMP < teg.delist_time
        limit #{count}
        ]]>
	</select>

    <select id="popularGoodsCount" resultType="java.lang.Integer">
        <![CDATA[
               SELECT
               count(1)
                FROM
                (
                SELECT
                    goods_id,
                    sum(sales_num) su
                FROM
                    t_esp_goods_sales_volume
                WHERE
                    `create_date` BETWEEN (CURDATE() - INTERVAL 30 DAY)
                AND CURDATE()
                GROUP BY
                    goods_id
                ORDER BY
                    su DESC
            ) a
        LEFT JOIN t_esp_goods_base_info teg ON teg.id = a.goods_id
        WHERE
            teg.goods_type != 2
        AND teg.`status` = 'G02'
        AND teg.is_delete = '01'
        AND CURRENT_TIMESTAMP > teg.list_time
        AND CURRENT_TIMESTAMP < teg.delist_time
        ]]>
    </select>


</mapper>